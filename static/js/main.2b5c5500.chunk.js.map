{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","className","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","Title","span","Grid","Section","title","children","Loader","role","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByTerm","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b5c5500.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HeaderComponent = ({ location: { pathname } }) => (\n  <Header className=\"nav\">\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n);\n\nexport default withRouter(HeaderComponent);\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"da464b12e93dbee58ec1a6cb6be8ed90\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding-top: 100px;\n  font-size: 20px;\n`;\n\nconst Text = styled.span`\n  //styled-components에서 props를 사용\n  color: ${(props) => props.color};\n  font-weight: 500;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.15s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: -5px;\n  right: 5px;\n  opacity: 0;\n  position: absolute;\n  transition: opacity 0.15s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ imageUrl, title, rating, year, isMovie = false, id }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🌟\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title && title.length > 18 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movie | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"Components/api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nconst HomeContainer = class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies information\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n};\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Tv | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_title}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                title={show.original_title}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"Components/api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nconst TVContainer = class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n};\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  error,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies on TV Show....\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    <Helmet>\n      <title>Search | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_title}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}{\" \"}\n      </>\n    )}\n    {error && <Message text={error} color=\"#e74c3c\" />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text={`Nothing found for:${searchTerm}`} color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"Components/api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n};\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(2px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 8px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 60%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Netflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text={error} color=\"#e74c3c\"></Message>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {`${\n            result.original_title ? result.original_title : result.original_name\n          } | Netflix`}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"Components/api\";\n\nconst DetailContainer = class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n};\nexport default DetailContainer;\n","import React from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" exact component={Search} />\n      <Route path=\"/movie/:id\" exact component={Detail} />\n      <Route path=\"/tv/:id\" exact component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n);\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}